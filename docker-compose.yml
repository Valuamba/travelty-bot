version: '3.5'

services:

  mongo:
    env_file: .env
    container_name: mongo
    image: mongo
    command: mongod --port 27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
    volumes:
      - mongo_db:/data/db
    ports:
      - '27017:27017'
    networks:
      - botnet

  db:
    container_name: postgres
    image: postgres:11-alpine
    volumes:
      - postgres_db:/var/lib/postgresql/data
    env_file: ./app/.env
    #    command: sh -c "echo ${POSTGRES_USER} ${POSTGRES_PASSWORD} ${POSTGRES_DB}"
#    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "5432:5432"
    deploy:
      mode: global
    networks:
        - botnet

#  test:
#    container_name: test
#    image: nicolaka/netshoot
#    env_file:
#      - ./app/.env
#    volumes:
#      - .:/src
#    environment:
#      - MONGODB_HOSTNAME=mongo
#      - POSTGRES_HOST=db
#    networks:
#      - botnet
#    depends_on:
#      - mongo

  bot:
    container_name: bot-template
    build:
      dockerfile: docker_test.dockerfile
      context: .
    env_file:
      - ./app/.env
    volumes:
      - .:/src
    environment:
      - MONGODB_HOSTNAME=mongo
      - POSTGRES_HOST=db
    networks:
      - botnet
    depends_on:
      - mongo

volumes:
  mongo_db:
  postgres_db:

networks:
  botnet:
    driver: bridge