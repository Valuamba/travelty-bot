version: '3.5'

services:
  tcpdump:
    build:
      dockerfile: Dockerfile
      context: .
    command: tcpdump -i eth0 -w /data/nginx.pcap
    volumes:
      - $PWD/data:/data
    networks:
      - botnet

  mongo:
    env_file: .env
    container_name: mongo
    image: mongo
    command: mongod --port 27017
    environment:
      - MONGO_INITDB_DATABASE=$MONGODB_DATABASE
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    volumes:
      - mongo_db:/data/db
    ports:
      - '27017-27019:27017-27019'
    networks:
      - botnet

  db:
    container_name: postgres
    image: postgres:13.3
    volumes:
      - postgres_db:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - "5435:5432"
    networks:
        - botnet

  bot:
    container_name: bot-template
    build:
      dockerfile: docker_test.dockerfile
      context: .
    restart: always
    command: sh -c "./wait-for.sh mongo:27017 db:5432 -- ./docker-entrypoint.sh"
    env_file:
      - ./app/.env
    volumes:
      - media:/media
      - bot:/srv
    environment:
      - MONGODB_HOSTNAME=mongo
      - POSTGRES_HOST=db
    networks:
      - botnet
    depends_on:
      - db
      - mongo

volumes:
  mongo_db:
  postgres_db:
  bot:
  media:

networks:
  botnet:
    driver: bridge
